plugins {
    id "com.android.application"
    id 'org.jetbrains.kotlin.android'
    id "kotlin-kapt"
    id "kotlinx-serialization"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

apply from: '../values.gradle'

android {
    namespace 'sgtmelon.scriptum'

    compileSdk AndroidVersion.COMPILE_SDK

    defaultConfig {
        applicationId "sgtmelon.scriptum"
        minSdk AndroidVersion.MIN_SDK
        targetSdk AndroidVersion.TARGET_SDK
        versionCode 28
        versionName git.version.execute().text.trim()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        buildConfigField "String", "DB_NAME", "\"HandyNotes\""
        buildConfigField "String", "BROWSER_URL", "\"https://play.google.com/store/apps/details?id=sgtmelon.scriptum\""
        buildConfigField "String", "PRIVACY_POLICY_URL", "\"https://github.com/SerjantArbuz/Scriptum/blob/master/PrivacyPolicy.md\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile(ProFiles.DEFAULT), ProFiles.MAIN

            buildConfigField "int", "NOTE_HISTORY_MAX_SIZE", '200'
        }

        debug {
            applicationIdSuffix = ".debug"

            /** Turn off for tests correct work! */
            minifyEnabled false
            proguardFiles getDefaultProguardFile(ProFiles.DEFAULT), ProFiles.MAIN
            testProguardFile ProFiles.TEST

            buildConfigField "int", "NOTE_HISTORY_MAX_SIZE", '50'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation project(':libraries:iconAnim')
    implementation project(':libraries:safeDialog')
    implementation project(':libraries:textDotAnim')
    implementation project(':libraries:extensions')

    implementation project(':tests:idling')
    implementation project(':tests:prod')
    testImplementation project(path: ':tests:common')
    androidTestImplementation project(path: ':tests:common')
    androidTestImplementation project(path: ':tests:cappuccino')

    implementation libs.kotlin.serialization

    implementation libs.firebase.analytics
    implementation libs.firebase.crashlytics

    implementation libs.dagger.core
    kapt libs.dagger.compiler

    //region AndroidX

    implementation libs.android.core
    implementation libs.android.appcompat
    implementation libs.android.material
    implementation libs.android.cardview
    implementation libs.android.constraint

    implementation libs.android.lifecycle.ext
    implementation libs.android.lifecycle.vm
    implementation libs.android.lifecycle.common // TODO is it needed? may be try runtime dependency

    implementation libs.android.room.runtime
    implementation libs.android.room.ktx
    kapt libs.android.room.compiler
    implementation libs.android.room.testing

    implementation libs.android.preference
    implementation libs.android.vector
    implementation libs.android.vector.animated

    //endregion

    //region Testing

    debugImplementation libs.leakcanary

    androidTestImplementation libs.test.core
    androidTestImplementation libs.test.runner
    androidTestImplementation libs.test.rules
    androidTestImplementation libs.test.junit

    androidTestImplementation libs.test.espresso.core
    androidTestImplementation libs.test.espresso.contrib
    androidTestImplementation libs.test.uiautomator

    testImplementation libs.test.mockk
    testImplementation libs.test.coroutines
    testImplementation libs.test.arch
    testImplementation libs.test.json

    //endregion

    implementation libs.timber

}